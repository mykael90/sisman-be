generator client {
  provider = "prisma-client-js"
  output   = "generated/client"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  name      String      @db.VarChar(63)
  login     String      @db.VarChar(63)
  email     String      @unique @db.VarChar(127)
  createdAt DateTime    @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt DateTime    @updatedAt @map("updated_at") @db.Timestamp(0)
  userRoles UserRoles[]

  @@map("users")
}

model Material {
  id            BigInt   @id @db.UnsignedBigInt
  name          String   @db.TinyText
  specification String?  @db.VarChar(1022)
  unit          String   @db.VarChar(31)
  isActive      Boolean  @default(true)
  createdAt     DateTime @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt     DateTime @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("materials")
}

model UserRoletypes {
  id          Int         @id
  role        String      @db.VarChar(255)
  description String      @db.Text
  createdAt   DateTime    @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt   DateTime    @updatedAt @map("updated_at") @db.Timestamp(0)
  userRoles   UserRoles[]

  @@map("users_roletypes")
}

model UserRoles {
  userId         Int           @map("user_id")
  userRoletypeId Int           @map("user_roletype_id")
  user           User          @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "users_roles_ibfk_1")
  userRoletype   UserRoletypes @relation(fields: [userRoletypeId], references: [id], onUpdate: Restrict, map: "users_roles_ibfk_2")

  @@id([userId, userRoletypeId])
  @@index([userRoletypeId], map: "role_id")
  @@map("users_roles")
}
